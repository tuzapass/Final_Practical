from Crypto.Cipher import AES
from Crypto.Random import get_random_bytes

# Get plaintext input from user
plaintext = input("Enter a message to encrypt: ")

# Generate a random 256-bit key
key = get_random_bytes(32)

# Pad the plaintext to a multiple of 16 bytes (the block size of AES)
padded_plaintext = plaintext.encode().ljust(16 * ((len(plaintext) + 15) // 16))

# Set up the AES cipher in CBC mode with a random IV
iv = get_random_bytes(16)
cipher = AES.new(key, AES.MODE_CBC, iv)

# Encrypt the padded plaintext
ciphertext = cipher.encrypt(padded_plaintext)

# Print the encrypted ciphertext as hexadecimal
print(f"Encrypted message: {ciphertext.hex()}")

# Decrypt the ciphertext back to plaintext
cipher = AES.new(key, AES.MODE_CBC, iv)
decrypted_plaintext = cipher.decrypt(ciphertext)

# Remove the padding from the decrypted plaintext and print it
plaintext = decrypted_plaintext.decode().rstrip('\0')
print(f"Decrypted message: {plaintext}")
